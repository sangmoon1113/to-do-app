@using to_do.Data;
@inject DialogService DialogService

<RadzenTemplateForm TItem="ScheduleData" Data="@model" Submit=@OnSubmit>
    <div class="row" style="margin-bottom: 16px">
        <div class="col-md-3">
            <RadzenLabel Text="Title" />
        </div>
        <div class="col">
            <RadzenTextBox @bind-Value="@model.Title" Name="Title" AutoComplete="false" />
            <RadzenRequiredValidator Text="Title is required" Component="Title" />
        </div>
    </div>
    <div class="row" style="margin-bottom: 16px">
        <div class="col-md-3">
            <RadzenLabel Text="Start" />
        </div>
        <div class="col">
            <RadzenDatePicker @bind-Value="@model.Start" Name="Start" ShowTime="true" ShowTimeOkButton="true" DateFormat="yyyy-MM-dd HH:mm" />
            <RadzenRequiredValidator Text="Start is required" Component="Start" />
        </div>
    </div>
    <div class="row" style="margin-bottom: 16px">
        <div class="col-md-3">
            <RadzenLabel Text="Finish" />
        </div>
        <div class="col">
            <RadzenDatePicker Name="Finish" @bind-Value="@model.Finish" ShowTime="true" ShowTimeOkButton="true" DateFormat="yyyy-MM-dd HH:mm" />
            <RadzenRequiredValidator Component="Finish" Text="Finish is required" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-3"></div>
        <div class="col">
            <RadzenButton ButtonType="ButtonType.Submit" Text="Save" />
        </div>
    </div>
</RadzenTemplateForm>
@code {
    [Parameter]
    public ScheduleData ScheduleData { get; set; }

    ScheduleData model = new ScheduleData();

    protected override void OnParametersSet()
    {
        model = ScheduleData;
    }

    void OnSubmit(ScheduleData model)
    {
        DialogService.Close(model);
    }
}